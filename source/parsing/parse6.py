#!/usr/bin/python
import re

data = '''
/* Floating Point Absolute Value: CCCCCC fffff 00000 sssss ddddd AAAAAA */
#define MASK_ABS_FP         0b01000100000000000000000000000101
#define MASK_ABS_FP_FORM    0b11111100000111110000000000111111
#define MASK_ABS_FP_FMT     0b00000011111000000000000000000000
#define MASK_ABS_FP_FS      0b00000000000000001111100000000000
#define MASK_ABS_FP_FD      0b00000000000000000000011111000000

/* Floating Point Ceiling Convert to Word Fixed Point: CCCCCC fffff 00000 sssss ddddd CCCCCC */
#define MASK_CEIL_FP        0b01000100000000000000000000001110
#define MASK_CEIL_FP_FORM   0b11111100000111110000000000111111
#define MASK_CEIL_FP_FMT    0b00000011111000000000000000000000
#define MASK_CEIL_FP_FS     0b00000000000000001111100000000000
#define MASK_CEIL_FP_FD     0b00000000000000000000011111000000

/* Floating Point Convert to Double Floating Point: CCCCCC fffff 00000 sssss ddddd CCCCCC */
#define MASK_CVTD_FP        0b01000100000000000000000000100001
#define MASK_CVTD_FP_FORM   0b11111100000111110000000000111111
#define MASK_CVTD_FP_FMT    0b00000011111000000000000000000000
#define MASK_CVTD_FP_FS     0b00000000000000001111100000000000
#define MASK_CVTD_FP_FD     0b00000000000000000000011111000000

/* Floating Point Convert to Single Floating Point: CCCCCC fffff 00000 sssss ddddd CCCCCC */
#define MASK_CVTS_FP        0b01000100000000000000000000100000
#define MASK_CVTS_FP_FORM   0b11111100000111110000000000111111
#define MASK_CVTS_FP_FMT    0b00000011111000000000000000000000
#define MASK_CVTS_FP_FS     0b00000000000000001111100000000000
#define MASK_CVTS_FP_FD     0b00000000000000000000011111000000

/* Floating Point Convert to Word Fixed Point: CCCCCC fffff 00000 sssss ddddd CCCCCC */
#define MASK_CVTW_FP        0b01000100000000000000000000100100
#define MASK_CVTW_FP_FORM   0b11111100000111110000000000111111
#define MASK_CVTW_FP_FMT    0b00000011111000000000000000000000
#define MASK_CVTW_FP_FS     0b00000000000000001111100000000000
#define MASK_CVTW_FP_FD     0b00000000000000000000011111000000

/* Floating Point Floor Convert to Word Fixed Point: CCCCCC fffff 00000 sssss ddddd FFFFFF */
#define MASK_FLOOR_FP       0b01000100000000000000000000001111
#define MASK_FLOOR_FP_FORM  0b11111100000111110000000000111111
#define MASK_FLOOR_FP_FMT   0b00000011111000000000000000000000
#define MASK_FLOOR_FP_FS    0b00000000000000001111100000000000
#define MASK_FLOOR_FP_FD    0b00000000000000000000011111000000

/* Jump and Link Register: JJJJJJ ii iiii iiii iiii iiii iiii iiii */
#define MASK_JALR           0b00000000000000000000000000001001
#define MASK_JALR_FORM      0b11111100000111110000000000111111
#define MASK_JALR_RS        0b00000011111000000000000000000000
#define MASK_JALR_RD        0b00000000000000001111100000000000
#define MASK_JALR_HINT      0b00000000000000000000011111000000

/* Floating Point Move: CCCCCC fffff 00000 sssss ddddd MMMMMM */
#define MASK_MOV_FP         0b01000100000000000000000000000110
#define MASK_MOV_FP_FORM    0b11111100000111110000000000111111
#define MASK_MOV_FP_FMT     0b00000011111000000000000000000000
#define MASK_MOV_FP_FS      0b00000000000000001111100000000000
#define MASK_MOV_FP_FD      0b00000000000000000000011111000000

/* Floating Point Negate: CCCCCC fffff 00000 sssss ddddd NNNNNN */
#define MASK_NEG_FP         0b01000100000000000000000000000111
#define MASK_NEG_FP_FORM    0b11111100000111110000000000111111
#define MASK_NEG_FP_FMT     0b00000011111000000000000000000000
#define MASK_NEG_FP_FS      0b00000000000000001111100000000000
#define MASK_NEG_FP_FD      0b00000000000000000000011111000000

/* Floating Point Round to Word Fixed Point */
#define MASK_ROUND_FP       0b01000100000000000000000000001100
#define MASK_ROUND_FP_FORM  0b11111100000111110000000000111111
#define MASK_ROUND_FP_FMT   0b00000011111000000000000000000000
#define MASK_ROUND_FP_FS    0b00000000000000001111100000000000
#define MASK_ROUND_FP_FD    0b00000000000000000000011111000000

/* Floating Point Square Root: CCCCCC fffff 00000 sssss ddddd SSSSSS */
#define MASK_SQRT_FP        0b01000100000000000000000000000100
#define MASK_SQRT_FP_FORM   0b11111100000111110000000000111111
#define MASK_SQRT_FP_FMT    0b00000011111000000000000000000000
#define MASK_SQRT_FP_FS     0b00000000000000001111100000000000
#define MASK_SQRT_FP_FD     0b00000000000000000000011111000000

/* Floating Point Truncate to word Fixed Point: CCCCCC fffff 00000 sssss ddddd TTTTTT */
#define MASK_TRUNC_FP       0b01000100000000000000000000001101
#define MASK_TRUNC_FP_FORM  0b11111100000111110000000000111111
#define MASK_TRUNC_FP_FMT   0b00000011111000000000000000000000
#define MASK_TRUNC_FP_FS    0b00000000000000001111100000000000
#define MASK_TRUNC_FP_FD    0b00000000000000000000011111000000
'''

mask = '0b11111100000111110000000000111111'
i = 85
n = 6

tmp_l = re.findall('MASK_([0-9A-Z]+_FP|[0-9A-Z]+)', data)
my_set = set()
l = []
for e in tmp_l:
    if e not in my_set:
        l.append(e)
        my_set.add(e)
print l

print '/* ' + mask + ' */'
for s in l:
    print '#define ID_' + s + '  ' + str(i)
    i += 1

print '#define FindCorrespondingMnemonic'+ str(n) +'(code) {  \\'
print '    switch ( code & ' + mask + ' ) {  \\'

for s in l:
    print '    case MASK_' + s + ':  \\'
    print '        return ID_' + s + ';  \\'

print '    }  \\'
print '}'




